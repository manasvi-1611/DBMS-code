mongo map reduce
use parc
db.city.insertMany([ { city: "pune", type: "urban", state: "MH", population: 5600000 }, { city: "mumbai" , type: "urbam", state: "MH" , population: 450000},{ city: "nagpur" , type: "rural" , state: "MH", population: 890000},{ city: "surat" , type: "rural" , state: "GUJ" , population: 120000},{ city: "vadodra" , type: "urban" , state: "GUJ" , population: 870000}]);
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId('67232b2c1bea4b301e86b01d'),
    '1': ObjectId('67232b2c1bea4b301e86b01e'),
    '2': ObjectId('67232b2c1bea4b301e86b01f'),
    '3': ObjectId('67232b2c1bea4b301e86b020'),
    '4': ObjectId('67232b2c1bea4b301e86b021')
  }
}
var1> db.city.mapReduce(
... function() {
... emit(this.state, this.population);
... },
... function(key , values) {
... return Array.sum(values);
... },
... {
... out: "statewise_population"
... }
... );
DeprecationWarning: Collection.mapReduce() is deprecated. Use an aggregation instead.
See https://docs.mongodb.com/manual/core/map-reduce for details.
{ result: 'statewise_population', ok: 1 }
var1> db.city.mapReduce(
... function(){
... emit(this.city , this.population);
... },
... function(key, values){
... return Array.sum(values);
... },
... {
... out: "citywise_population"
... }
... ,
... );
{ result: 'citywise_population', ok: 1 }
var1> db.city.mapReduce(
... function(){
... emit(this.type, this.population);
... },
... function(key, values){
... return Array.sum(values);
... },
... {
... out: "typewise_population"
... }
... );
{ result: 'typewise_population', ok: 1 }
var1> db.statewise_population.find().pretty();
[
  { _id: 'GUJ', value: '870000120000' },
  {
    _id: 'MH',
    value: '8900004500005600000117000018900002400000124423735600000'
  }
]
var1> db.citywise_population.find().pretty();
[
  { _id: 'surat', value: '120000' },
  { _id: 'nagpur', value: '8900002400000' },
  { _id: 'pune', value: 11200000 },
  { _id: 'mumbai', value: 12892373 },
  { _id: 'nashik', value: 1890000 },
  { _id: 'aurangabad', value: 1170000 },
  { _id: 'vadodra', value: 870000 }
]
var1> db.citywise_population.find().pretty();
[
  { _id: 'surat', value: '120000' },
  { _id: 'nagpur', value: '8900002400000' },
  { _id: 'pune', value: 11200000 },
  { _id: 'mumbai', value: 12892373 },
  { _id: 'nashik', value: 1890000 },
  { _id: 'aurangabad', value: 1170000 },
  { _id: 'vadodra', value: 870000 }
]
var1> db.typewise_population.find().pretty();
[
  { _id: 'urbam', value: 450000 },
  { _id: 'urban', value: 29972373 },
  { _id: 'rural', value: '120000890000' }
]
